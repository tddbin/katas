{
  "name": "ECMAScript 11 / ES2020",
  "nameSlug": "es11-katas",
  "items": [
    {
      "name": "`string.matchAll()`",
      "description": "Returns all results matching a regular expression.",
      "path": "string-api/matchAll",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 29
        },
        {
          "bundle": "es6/language",
          "id": 37
        },
        {
          "bundle": "es6/language",
          "id": 20
        }
      ],
      "links": [
        {
          "url": "https://github.com/tc39/proposal-string-matchall",
          "comment": "The repository where the proposal was worked on, some interesting details in there about naming and the process of how this became a standard.",
          "tags": [
            "spec",
            "discussion"
          ]
        },
        {
          "url": "https://tc39.es/ecma262/#sec-string.prototype.matchall",
          "comment": "The \"ECMAScript Language Specification\", the JavaScript specification text describing this function.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll",
          "comment": "The Mozilla Developer Network docs, contains good examples.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "https://stackoverflow.com/questions/61173919/why-does-the-new-matchall-in-javascript-return-an-iterator-vs-an-array",
          "comment": "\"Why does the new \"matchAll\" in Javascript return an iterator (vs. an array)?\"",
          "tags": [
            "article",
            "discussion"
          ]
        }
      ],
      "groupName": "String API",
      "groupNameSlug": "string-api",
      "publishDateRfc822": "Sat, 12 Mar 2022 21:53:00 GMT",
      "id": 1
    },
    {
      "name": "Basics",
      "description": "A `BigInt` can represent numbers larger than `number`",
      "path": "bigint/basics",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "links": [
        {
          "url": "https://github.com/tc39/proposal-bigint",
          "comment": "The proposal repo.",
          "tags": [
            "spec",
            "discussion"
          ]
        },
        {
          "url": "https://tc39.es/ecma262/#sec-bigint-constructor",
          "comment": "The \"ECMAScript Language Specification\", the JavaScript specification text describing this function.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt",
          "comment": "The Mozilla Developer Network docs, contains good examples.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "https://twitter.com/jskatas/status/1502068572788604929",
          "comment": "Announcement of this kata on twitter.",
          "tags": [
            "announcement",
            "tweet"
          ]
        }
      ],
      "groupName": "BigInt",
      "groupNameSlug": "bigint",
      "publishDateRfc822": "Thu, 10 Mar 2022 23:59:00 GMT",
      "id": 2
    }
  ]
}