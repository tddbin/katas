{
  "name": "ECMAScript 1",
  "nameSlug": "es1-katas",
  "groups": {
    "Array API": {
      "items": [
        {
          "name": "`array.sort()` basics",
          "description": "The `sort()` function sorts an array as if each element was a string.",
          "path": "array-api/sort-basics",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-10-22T09:11:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort",
              "comment": "Very detailed description of how sort() works.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "https://en.wikipedia.org/wiki/List_of_Unicode_characters#Basic_Latin",
              "comment": "All the basic latin characters (close to ASCII).",
              "tags": [
                "wikipedia",
                "docs"
              ]
            },
            {
              "url": "https://en.wikipedia.org/wiki/Emoji#Blocks",
              "comment": "Some emoji icons and their unicode data.",
              "tags": [
                "wikipedia",
                "docs"
              ]
            },
            {
              "url": "https://twitter.com/wolframkriesing/status/657161540525826048",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Array API",
          "id": "1"
        },
        {
          "name": "`array.sort()` can take a compare function",
          "description": "Passing a callback to the `sort()` function, allows for any custom sorting.",
          "path": "array-api/sort-with-function",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es1/language",
              "id": 1
            }
          ],
          "publishDateUTC": "2015-10-23T09:26:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort",
              "comment": "Very detailed description of how `sort()` works.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "https://twitter.com/wolframkriesing/status/657488332298043392",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Array API",
          "id": "2"
        }
      ],
      "slug": "array-api",
      "name": "Array API"
    },
    "Global Object API": {
      "items": [
        {
          "name": "`parseInt()`",
          "description": "`parseInt()` converts a given value to a string and then tries to make an integer out of it.",
          "path": "global-api/parseInt",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2019-10-06T19:53:00.000Z",
          "links": [
            {
              "url": "https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%201st%20edition,%20June%201997.pdf",
              "comment": "The very first version of the spec defining `parseInt`, the ES1 spec.",
              "tags": [
                "spec",
                "docs"
              ]
            },
            {
              "url": "https://www.ecma-international.org/ecma-262/10.0/index.html#sec-parseint-string-radix",
              "comment": "A later, newer version of the spec text for `parseInt`, from ES10.",
              "tags": [
                "spec",
                "docs"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt",
              "comment": "The description of `parseInt()` on MDN, probably best to read.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "https://twitter.com/wolframkriesing/status/1180943849486716928",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Global Object API",
          "id": "3"
        },
        {
          "name": "`parseInt()` in depth",
          "description": "`parseInt()` converts a given value to a string and then tries to make an integer out of it.",
          "path": "global-api/parseInt-in-depth",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "links": [],
          "groupName": "Global Object API",
          "id": "4"
        }
      ],
      "slug": "global-object-api",
      "name": "Global Object API"
    },
    "Type conversion": {
      "items": [
        {
          "name": "to boolean",
          "description": "How do different types convert to a boolean?",
          "path": "type-conversion/to-boolean",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es1/language",
              "id": 8
            }
          ],
          "links": [],
          "groupName": "Type conversion",
          "id": "5"
        },
        {
          "name": "to number",
          "description": "How do different types convert to a number?",
          "path": "type-conversion/to-number",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es1/language",
              "id": 8
            }
          ],
          "links": [],
          "groupName": "Type conversion",
          "id": "6"
        }
      ],
      "slug": "type-conversion",
      "name": "Type conversion"
    },
    "Unary Operators": {
      "items": [
        {
          "name": "All unary operators",
          "description": "unary - an operation with only one operand",
          "path": "unary-operators/all",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2021-02-07T23:50:00.000Z",
          "links": [],
          "groupName": "Unary Operators",
          "id": "8"
        },
        {
          "name": "Unary \"+\" operator",
          "description": "converts its operand to the Number type",
          "path": "unary-operators/plus",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es1/language",
              "id": 8
            }
          ],
          "publishDateUTC": "2021-02-07T01:01:00.000Z",
          "links": [
            {
              "url": "https://www.ecma-international.org/wp-content/uploads/ECMA-262_1st_edition_june_1997.pdf",
              "comment": "The original ECMAScript 1 specification, \"Unary + Operator\" is on page 40, chapter 11.4.6 (in a 110 pages PDF).",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://www.ecma-international.org/wp-content/uploads/ECMA-262_1st_edition_june_1997.pdf",
              "comment": "The original ES1 spec describes the `Number` type in chapter 8.5 (a 110 pages PDF).",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Unary_plus",
              "comment": "The MDN page.",
              "tags": [
                "mdn"
              ]
            },
            {
              "url": "https://twitter.com/jskatas/status/1358119660600889351",
              "comment": "Tweeting that not-assertions make sense, sometimes.",
              "tags": [
                "social media post"
              ]
            }
          ],
          "groupName": "Unary Operators",
          "id": "9"
        },
        {
          "name": "Unary \"+\" operator, in depth",
          "description": "converts its operand to the Number type",
          "path": "unary-operators/plus-in-depth",
          "level": "ADVANCED",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es1/language",
              "id": 8
            },
            {
              "bundle": "es1/language",
              "id": 9
            }
          ],
          "publishDateUTC": "2021-02-07T01:31:00.000Z",
          "links": [],
          "groupName": "Unary Operators",
          "id": "10"
        }
      ],
      "slug": "unary-operators",
      "name": "Unary Operators"
    },
    "Bitwise Shift Operators": {
      "items": [
        {
          "name": "Left Shift \"<<\"",
          "description": "shifts the left operand's value x bits to the left in binary representation",
          "path": "bitwise-shift-operators/left-shift",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2023-09-01T17:00:00.000Z",
          "links": [
            {
              "url": "https://www.ecma-international.org/wp-content/uploads/ECMA-262_1st_edition_june_1997.pdf",
              "comment": "The original ECMAScript 1 specification, \"The left shift operator ( << )\" is on page 45, chapter 11.7.1 (in a 110 pages PDF).",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Left_shift",
              "comment": "The MDN page.",
              "tags": [
                "mdn"
              ]
            },
            {
              "url": "https://mastodontech.de/@wolframkriesing/110968248279414969",
              "comment": "Mastodon toot about starting to dive into the rabbit hole about writing this kata.",
              "tags": [
                "social media post"
              ]
            }
          ],
          "groupName": "Bitwise Shift Operators",
          "id": "11"
        }
      ],
      "slug": "bitwise-shift-operators",
      "name": "Bitwise Shift Operators"
    }
  }
}