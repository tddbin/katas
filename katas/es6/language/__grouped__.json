{
  "name": "ECMAScript 6 / ES2015",
  "nameSlug": "es6-katas",
  "groups": {
    "Template strings": {
      "items": [
        {
          "name": "basics",
          "description": "A template string, is wrapped in backticks.",
          "path": "template-strings/basics",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-03-13T07:55:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings",
              "comment": "Description of template strings.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components",
              "comment": "The specification describing the template string syntax.",
              "tags": [
                "spec"
              ]
            }
          ],
          "groupName": "Template strings",
          "id": "1"
        },
        {
          "name": "multiline",
          "description": "Template strings, can be multiline.",
          "path": "template-strings/multiline",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 1
            }
          ],
          "publishDateUTC": "2015-03-16T07:55:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings#Multi-line_strings",
              "comment": "Description of multiline template strings.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "Template strings",
          "id": "2"
        },
        {
          "name": "tagged template strings",
          "description": "Advanced form of template strings.",
          "path": "template-strings/tagged",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 1
            },
            {
              "bundle": "es6/language",
              "id": 18
            }
          ],
          "publishDateUTC": "2015-03-17T07:55:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates",
              "comment": "Description of tagged template strings.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "Template strings",
          "id": "3"
        },
        {
          "name": "`raw` property",
          "description": "The `raw` property accesses the string as it was entered.",
          "path": "template-strings/raw",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 1
            },
            {
              "bundle": "es6/language",
              "id": 3
            }
          ],
          "publishDateUTC": "2015-03-18T07:55:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings#Raw_strings",
              "comment": "Description of `raw` property of tagged template strings.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-static-semantics-templatestrings",
              "comment": "Describing the raw behavior.",
              "tags": [
                "spec"
              ]
            }
          ],
          "groupName": "Template strings",
          "id": "4"
        }
      ],
      "slug": "template-strings",
      "name": "Template strings"
    },
    "Arrow functions": {
      "items": [
        {
          "name": "basics",
          "description": "Arrow functions are a more convinient and shorter way to write a function.",
          "path": "arrow-functions/basics",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-03-19T07:55:00.000Z",
          "groupName": "Arrow functions",
          "id": "5"
        },
        {
          "name": "function binding",
          "description": "Arrow functions have lexical `this`, no dynamic `this`.",
          "path": "arrow-functions/binding",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 5
            },
            {
              "bundle": "es6/language",
              "id": 22
            }
          ],
          "publishDateUTC": "2015-03-20T07:55:00.000Z",
          "groupName": "Arrow functions",
          "id": "6"
        }
      ],
      "slug": "arrow-functions",
      "name": "Arrow functions"
    },
    "Block scope": {
      "items": [
        {
          "name": "`let` declaration",
          "description": "`let` restricts the scope of the variable to the current block.",
          "path": "block-scoping/let",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-03-23T07:55:00.000Z",
          "groupName": "Block scope",
          "id": "7"
        },
        {
          "name": "`const` declaration",
          "description": "`const` is like `let` plus read-only.",
          "path": "block-scoping/const",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            }
          ],
          "publishDateUTC": "2015-03-24T07:55:00.000Z",
          "groupName": "Block scope",
          "id": "8"
        }
      ],
      "slug": "block-scope",
      "name": "Block scope"
    },
    "Object literal": {
      "items": [
        {
          "name": "basics",
          "description": "ES6 has new shorthands for objects.",
          "path": "object-literal/basics",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 5
            }
          ],
          "publishDateUTC": "2015-03-25T07:55:00.000Z",
          "groupName": "Object literal",
          "id": "9"
        },
        {
          "name": "computed properties",
          "description": "Object literal properties may be computed values.",
          "path": "object-literal/computed-properties",
          "level": "ADVANCED",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 5
            },
            {
              "bundle": "es6/language",
              "id": 9
            }
          ],
          "publishDateUTC": "2015-04-03T07:55:00.000Z",
          "groupName": "Object literal",
          "id": "16"
        },
        {
          "name": "getter",
          "description": "A getter binds an object property to a function that will be called when that property is looked up.",
          "path": "object-literal/getter",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 9
            },
            {
              "bundle": "es6/language",
              "id": 16
            }
          ],
          "publishDateUTC": "2015-07-27T08:05:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get",
              "comment": "Description of all the details of a getter.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-object-type",
              "comment": "\"An accessor property associates a key value with one or two accessor functions ...\"",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://twitter.com/es6katas/status/625577823357566976",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Object literal",
          "id": "66"
        },
        {
          "name": "setter",
          "description": "A setter binds an object property to a function to be called when there is an attempt to set that property.",
          "path": "object-literal/setter",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 9
            },
            {
              "bundle": "es6/language",
              "id": 16
            }
          ],
          "publishDateUTC": "2015-07-28T07:57:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set",
              "comment": "Description of all the details of a setter.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-object-type",
              "comment": "\"An accessor property associates a key value with one or two accessor functions ...\"",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-method-definitions",
              "comment": "The syntax definition of how to write an (accessor) method.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://twitter.com/es6katas/status/625938211672600576",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Object literal",
          "id": "67"
        }
      ],
      "slug": "object-literal",
      "name": "Object literal"
    },
    "Destructuring": {
      "items": [
        {
          "name": "array",
          "description": "Destructuring arrays allows for more concise.",
          "path": "destructuring/array",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 1
            }
          ],
          "publishDateUTC": "2015-03-26T07:55:00.000Z",
          "groupName": "Destructuring",
          "id": "10"
        },
        {
          "name": "string",
          "description": "Destructuring can also be done on strings.",
          "path": "destructuring/string",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 17
            }
          ],
          "publishDateUTC": "2015-03-27T07:55:00.000Z",
          "groupName": "Destructuring",
          "id": "11"
        },
        {
          "name": "object",
          "description": "Destructuring objects is a core concepts for modules and more.",
          "path": "destructuring/object",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 9
            }
          ],
          "publishDateUTC": "2015-03-30T07:55:00.000Z",
          "groupName": "Destructuring",
          "id": "12"
        },
        {
          "name": "defaults",
          "description": "When destructuring you can also use default values.",
          "path": "destructuring/defaults",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 10
            },
            {
              "bundle": "es6/language",
              "id": 12
            }
          ],
          "publishDateUTC": "2015-03-31T07:55:00.000Z",
          "groupName": "Destructuring",
          "id": "13"
        },
        {
          "name": "parameters",
          "description": "Destructuring function parameters.",
          "path": "destructuring/parameters",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 10
            },
            {
              "bundle": "es6/language",
              "id": 12
            },
            {
              "bundle": "es6/language",
              "id": 5
            }
          ],
          "publishDateUTC": "2015-04-01T07:55:00.000Z",
          "groupName": "Destructuring",
          "id": "14"
        },
        {
          "name": "assign",
          "description": "Assign variables while destructuring.",
          "path": "destructuring/rename",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 10
            },
            {
              "bundle": "es6/language",
              "id": 12
            },
            {
              "bundle": "es6/language",
              "id": 13
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 5
            }
          ],
          "publishDateUTC": "2015-04-02T07:55:00.000Z",
          "groupName": "Destructuring",
          "id": "15"
        }
      ],
      "slug": "destructuring",
      "name": "Destructuring"
    },
    "Unicode": {
      "items": [
        {
          "name": "in strings",
          "description": "How to use unicode in strings.",
          "path": "unicode/in-strings",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 1
            }
          ],
          "publishDateUTC": "2015-04-06T07:55:00.000Z",
          "groupName": "Unicode",
          "id": "17"
        }
      ],
      "slug": "unicode",
      "name": "Unicode"
    },
    "Rest operator": {
      "items": [
        {
          "name": "as parameter",
          "description": "Use the rest operator as parameter.",
          "path": "rest/as-parameter",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-07T08:15:00.000Z",
          "groupName": "Rest operator",
          "id": "18"
        },
        {
          "name": "with destructuring",
          "description": "Use the rest operator with destructuring.",
          "path": "rest/with-destructuring",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-08T07:55:00.000Z",
          "groupName": "Rest operator",
          "id": "19"
        }
      ],
      "slug": "rest-operator",
      "name": "Rest operator"
    },
    "Spread operator": {
      "items": [
        {
          "name": "with arrays",
          "description": "Spread syntax in use with arrays.",
          "path": "spread/with-arrays",
          "level": "INTERMEDIATE",
          "publishDateUTC": "2015-04-10T08:18:00.000Z",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 10
            },
            {
              "bundle": "es6/language",
              "id": 19
            }
          ],
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",
              "comment": "Syntax docs on MDN.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "Spread operator",
          "id": "20"
        },
        {
          "name": "with strings",
          "description": "Spread syntax in use with strings.",
          "path": "spread/with-strings",
          "level": "INTERMEDIATE",
          "publishDateUTC": "2015-04-13T07:55:00.000Z",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 10
            },
            {
              "bundle": "es6/language",
              "id": 19
            }
          ],
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",
              "comment": "Syntax docs on MDN.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "Spread operator",
          "id": "21"
        }
      ],
      "slug": "spread-operator",
      "name": "Spread operator"
    },
    "Class": {
      "items": [
        {
          "name": "creation",
          "description": "Create a class.",
          "path": "class/creation",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-14T07:55:00.000Z",
          "groupName": "Class",
          "id": "22"
        },
        {
          "name": "accessors",
          "description": "Getter+setters as class properties.",
          "path": "class/accessors",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-15T07:56:00.000Z",
          "groupName": "Class",
          "id": "23"
        },
        {
          "name": "static",
          "description": "Use of the static keyword inside a class.",
          "path": "class/static",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-16T07:55:00.000Z",
          "groupName": "Class",
          "id": "24"
        },
        {
          "name": "extends",
          "description": "How to do inheritance, using `extends`.",
          "path": "class/extends",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-17T08:25:00.000Z",
          "groupName": "Class",
          "id": "25"
        },
        {
          "name": "more extends",
          "description": "More in depth `extends` stuff",
          "path": "class/more-extends",
          "level": "ADVANCED",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-20T07:55:00.000Z",
          "groupName": "Class",
          "id": "26"
        },
        {
          "name": "super in method",
          "description": "Use of `super` inside a method.",
          "path": "class/super-in-method",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-21T07:55:00.000Z",
          "groupName": "Class",
          "id": "27"
        },
        {
          "name": "super in constructor",
          "description": "Use of `super` inside the constructor.",
          "path": "class/super-in-constructor",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-22T07:55:00.000Z",
          "groupName": "Class",
          "id": "28"
        }
      ],
      "slug": "class",
      "name": "Class"
    },
    "Array API": {
      "items": [
        {
          "name": "`Array.from()`",
          "description": "Convert a not-array into an array.",
          "path": "array-api/from",
          "level": "TBD",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-23T08:32:00.000Z",
          "groupName": "Array API",
          "id": "29"
        },
        {
          "name": "`Array.of()`",
          "description": "`Array.of()` creates an array with the given arguments as elements.",
          "path": "array-api/of",
          "level": "TBD",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-27T08:09:00.000Z",
          "groupName": "Array API",
          "id": "30"
        },
        {
          "name": "`array.fill()`",
          "description": "`Array.prototype.fill()` can fill up an array with one value.",
          "path": "array-api/fill",
          "level": "TBD",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            }
          ],
          "publishDateUTC": "2015-04-28T07:55:00.000Z",
          "links": [
            {
              "url": "https://github.com/tddbin/es6katas.org/issues/9",
              "comment": "A discussion in a github issue, about how to use this kata.",
              "tags": [
                "discussion"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill",
              "comment": "API doc on MDN.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "Array API",
          "id": "31"
        },
        {
          "name": "`array.find()`",
          "description": "`Array.prototype.find()` finds one item in an array.",
          "path": "array-api/find",
          "level": "TBD",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-04-29T07:55:00.000Z",
          "groupName": "Array API",
          "id": "32"
        },
        {
          "name": "`array.findIndex()`",
          "description": "`Array.prototype.findIndex()` find the index of an item in an array.",
          "path": "array-api/findIndex",
          "level": "TBD",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            }
          ],
          "publishDateUTC": "2015-05-04T08:01:00.000Z",
          "groupName": "Array API",
          "id": "33"
        },
        {
          "name": "`array.entries()`",
          "description": "`Array.prototype.entries()` returns an iterator object with all entries.",
          "path": "array-api/entries",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 29
            },
            {
              "bundle": "es6/language",
              "id": 39
            }
          ],
          "publishDateUTC": "2015-05-18T08:06:00.000Z",
          "groupName": "Array API",
          "id": "41"
        },
        {
          "name": "`array.keys()`",
          "description": "`Array.prototype.keys()` returns an iterator for all keys in the array.",
          "path": "array-api/keys",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 10
            },
            {
              "bundle": "es6/language",
              "id": 29
            },
            {
              "bundle": "es6/language",
              "id": 39
            }
          ],
          "publishDateUTC": "2015-05-19T07:55:00.000Z",
          "groupName": "Array API",
          "id": "42"
        },
        {
          "name": "`array.values()`",
          "description": "`Array.prototype.values()` returns an iterator for all values in the array",
          "path": "array-api/values",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 10
            },
            {
              "bundle": "es6/language",
              "id": 39
            }
          ],
          "publishDateUTC": "2015-05-20T07:55:00.000Z",
          "groupName": "Array API",
          "id": "43"
        }
      ],
      "slug": "array-api",
      "name": "Array API"
    },
    "Symbol": {
      "items": [
        {
          "name": "basics",
          "description": "Symbol basics.",
          "path": "symbol/basics",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-05-05T11:21:00.000Z",
          "groupName": "Symbol",
          "id": "34"
        },
        {
          "name": "`Symbol.for()`",
          "description": "`Symbol.for()` for registering Symbols globally.",
          "path": "symbol/for",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-05-06T07:55:00.000Z",
          "groupName": "Symbol",
          "id": "35"
        },
        {
          "name": "`Symbol.keyFor()`",
          "description": "`Symbol.keyFor()` gets the symbol key for a given symbol.",
          "path": "symbol/keyFor",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 35
            }
          ],
          "publishDateUTC": "2015-05-07T08:09:00.000Z",
          "groupName": "Symbol",
          "id": "36"
        }
      ],
      "slug": "symbol",
      "name": "Symbol"
    },
    "Iterator": {
      "items": [
        {
          "name": "array",
          "description": "",
          "path": "iterator/array",
          "level": "TBD",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-05-08T07:55:00.000Z",
          "groupName": "Iterator",
          "id": "37"
        },
        {
          "name": "string",
          "description": "",
          "path": "iterator/string",
          "level": "TBD",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 34
            },
            {
              "bundle": "es6/language",
              "id": 37
            }
          ],
          "publishDateUTC": "2015-05-11T07:55:00.000Z",
          "groupName": "Iterator",
          "id": "38"
        },
        {
          "name": "protocol",
          "description": "",
          "path": "iterator/protocol",
          "level": "EXPERT",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-05-12T07:55:00.000Z",
          "groupName": "Iterator",
          "id": "39"
        },
        {
          "name": "usage",
          "description": "",
          "path": "iterator/usages",
          "level": "EXPERT",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 10
            },
            {
              "bundle": "es6/language",
              "id": 12
            },
            {
              "bundle": "es6/language",
              "id": 34
            },
            {
              "bundle": "es6/language",
              "id": 39
            },
            {
              "bundle": "es6/language",
              "id": 20
            }
          ],
          "groupName": "Iterator",
          "id": "40"
        }
      ],
      "slug": "iterator",
      "name": "Iterator"
    },
    "Map": {
      "items": [
        {
          "name": "Basics",
          "description": "A Map holds key-value pairs, the key can even be a complex value.",
          "path": "map/basics",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            }
          ],
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
              "comment": "MDN page about Map.",
              "tags": [
                "mdn"
              ]
            },
            {
              "url": "https://262.ecma-international.org/6.0/#sec-map-objects",
              "comment": "The chapter in the specification, with all details about Map.",
              "tags": [
                "spec"
              ]
            }
          ],
          "publishDateUTC": "2015-05-21T07:55:00.000Z",
          "groupName": "Map",
          "id": "44"
        },
        {
          "name": "`map.get()`",
          "description": "`Map.prototype.get` returns the element from the map for a key.",
          "path": "map/get",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 37
            }
          ],
          "publishDateUTC": "2015-05-22T07:55:00.000Z",
          "groupName": "Map",
          "id": "45"
        },
        {
          "name": "`map.set()`",
          "description": "`Map.prototype.set` adds a new element with key and value to a Map.",
          "path": "map/set",
          "level": "EXPERT",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-05-26T08:03:00.000Z",
          "groupName": "Map",
          "id": "46"
        },
        {
          "name": "initialize",
          "description": "Initializing a map with values.",
          "path": "map/initialize",
          "level": "ADVANCED",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 29
            },
            {
              "bundle": "es6/language",
              "id": 44
            },
            {
              "bundle": "es6/language",
              "id": 46
            }
          ],
          "publishDateUTC": "2015-06-22T11:56:00.000Z",
          "groupName": "Map",
          "id": "53"
        },
        {
          "name": "`map.has()`",
          "description": "Indicates whether an element with a key exists.",
          "path": "map/has",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 44
            },
            {
              "bundle": "es6/language",
              "id": 46
            }
          ],
          "publishDateUTC": "2015-07-10T08:09:00.000Z",
          "links": [
            {
              "url": "https://www.youtube.com/watch?v=71aX1z0SzZU",
              "comment": "A video (15min) documenting how this kata was created.",
              "tags": [
                "video"
              ]
            }
          ],
          "groupName": "Map",
          "id": "62"
        }
      ],
      "slug": "map",
      "name": "Map"
    },
    "Set": {
      "items": [
        {
          "name": "basics",
          "description": "",
          "path": "set/basics",
          "level": "TBD",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-05-27T10:12:00.000Z",
          "groupName": "Set",
          "id": "47"
        },
        {
          "name": "`set.add()`",
          "description": "Appends a new element to the end of a Set object.",
          "path": "set/add",
          "level": "TBD",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 47
            }
          ],
          "publishDateUTC": "2015-05-29T06:55:00.000Z",
          "groupName": "Set",
          "id": "48"
        },
        {
          "name": "`set.delete()`",
          "description": "Removes an element from a set.",
          "path": "set/delete",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 47
            },
            {
              "bundle": "es6/language",
              "id": 48
            }
          ],
          "publishDateUTC": "2015-07-15T16:12:00.000Z",
          "links": [
            {
              "url": "https://twitter.com/es6katas/status/621351626561994752",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Set",
          "id": "64"
        },
        {
          "name": "the API",
          "description": "`Set` API overview.",
          "path": "set/api",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 29
            },
            {
              "bundle": "es6/language",
              "id": 47
            },
            {
              "bundle": "es6/language",
              "id": 48
            },
            {
              "bundle": "es6/language",
              "id": 64
            },
            {
              "bundle": "es6/language",
              "id": 5
            },
            {
              "bundle": "es6/language",
              "id": 20
            }
          ],
          "publishDateUTC": "2015-07-16T08:24:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
              "comment": "",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "https://twitter.com/es6katas/status/621596289160081408",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Set",
          "id": "65"
        },
        {
          "name": "`set.clear()`",
          "description": "Removes all elements from a Set object.",
          "path": "set/clear",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 47
            },
            {
              "bundle": "es6/language",
              "id": 48
            },
            {
              "bundle": "es6/language",
              "id": 12
            }
          ],
          "publishDateUTC": "2015-08-03T08:25:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-set.prototype.clear",
              "comment": "How the implementation is specified.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/clear",
              "comment": "The MDN docs.",
              "tags": [
                "docs",
                "mdn"
              ]
            },
            {
              "url": "https://twitter.com/es6katas/status/628119522604662785",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Set",
          "id": "70"
        }
      ],
      "slug": "set",
      "name": "Set"
    },
    "Generator": {
      "items": [
        {
          "name": "creation",
          "description": "There are many ways to create a generator",
          "path": "generator/creation",
          "level": "TBD",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 16
            },
            {
              "bundle": "es6/language",
              "id": 22
            }
          ],
          "publishDateUTC": "2015-06-01T08:39:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*",
              "comment": "Describes the `function*` declaration.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "Generator",
          "id": "49"
        },
        {
          "name": "iterator",
          "description": "Generators return iterable objects",
          "path": "generator/iterator",
          "level": "TBD",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 49
            }
          ],
          "publishDateUTC": "2015-06-03T07:55:00.000Z",
          "groupName": "Generator",
          "id": "50"
        },
        {
          "name": "yield expressions",
          "description": "The yield keyword is used to pause and resume a generator function",
          "path": "generator/yield",
          "level": "TBD",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 49
            },
            {
              "bundle": "es6/language",
              "id": 50
            }
          ],
          "publishDateUTC": "2015-06-05T08:25:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield",
              "comment": "Describing the `yield` keyword.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "Generator",
          "id": "51"
        },
        {
          "name": "send value to a generator",
          "description": "By calling next() with a parameter, you can pass a value to a generator.",
          "path": "generator/send-value",
          "level": "ADVANCED",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 49
            },
            {
              "bundle": "es6/language",
              "id": 50
            },
            {
              "bundle": "es6/language",
              "id": 51
            }
          ],
          "publishDateUTC": "2015-06-18T12:07:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-generatorresume",
              "comment": "The part in the spec, that describes how a generator resumes.",
              "tags": [
                "spec"
              ]
            }
          ],
          "groupName": "Generator",
          "id": "52"
        },
        {
          "name": "send function to a generator",
          "description": "By calling next() with a function, you can pass it to the generator.",
          "path": "generator/send-function",
          "level": "EXPERT",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 49
            },
            {
              "bundle": "es6/language",
              "id": 50
            },
            {
              "bundle": "es6/language",
              "id": 51
            },
            {
              "bundle": "es6/language",
              "id": 52
            }
          ],
          "publishDateUTC": "2015-06-29T11:49:00.000Z",
          "groupName": "Generator",
          "id": "56"
        },
        {
          "name": "`return` inside a generator function",
          "description": "Return statement in a generator function is special.",
          "path": "generator/return",
          "level": "ADVANCED",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 51
            },
            {
              "bundle": "es6/language",
              "id": 52
            },
            {
              "bundle": "es6/language",
              "id": 50
            },
            {
              "bundle": "es6/language",
              "id": 49
            },
            {
              "bundle": "es6/language",
              "id": 12
            },
            {
              "bundle": "es6/language",
              "id": 29
            },
            {
              "bundle": "es6/language",
              "id": 39
            }
          ],
          "publishDateUTC": "2015-09-25T14:45:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-iteratorresult-interface",
              "comment": "Description of the IteratorResult interface.",
              "tags": [
                "spec",
                "docs"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield#Description",
              "comment": "Describes how a return statement behaves inside a generator.",
              "tags": [
                "docs",
                "mdn"
              ]
            }
          ],
          "groupName": "Generator",
          "id": "73"
        }
      ],
      "slug": "generator",
      "name": "Generator"
    },
    "Object API": {
      "items": [
        {
          "name": "`Object.is()`",
          "description": "`Object.is()` compares if two values are the same.",
          "path": "object-api/is",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 44
            }
          ],
          "publishDateUTC": "2015-06-24T07:55:00.000Z",
          "groupName": "Object API",
          "id": "54"
        }
      ],
      "slug": "object-api",
      "name": "Object API"
    },
    "Number API": {
      "items": [
        {
          "name": "`Number.isInteger()`",
          "description": "`Number.isInteger()` determines if a value is an integer.",
          "path": "number-api/isinteger",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-06-25T07:55:00.000Z",
          "groupName": "Number API",
          "id": "55"
        },
        {
          "name": "`Number.isNaN()`",
          "description": "`Number.isNaN()` determines if a value is `NaN`.",
          "path": "number-api/isnan",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2019-06-15T15:42:00.000Z",
          "links": [
            {
              "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan",
              "comment": "Description of `Number.isNaN` in the specification.",
              "tags": [
                "spec",
                "docs"
              ]
            },
            {
              "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer",
              "comment": "Description of `Number.MAX_SAFE_INTEGER` in the spec.",
              "tags": [
                "spec",
                "docs"
              ]
            },
            {
              "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-number.positive_infinity",
              "comment": "Description of `Number.POSITIVE_INFINITY` in the spec.",
              "tags": [
                "spec",
                "docs"
              ]
            },
            {
              "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number",
              "comment": "The (old) global `isNaN` function, that behaves a bit different.",
              "tags": [
                "spec",
                "docs"
              ]
            },
            {
              "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-math.pi",
              "comment": "The place where `Math.PI` is specified.",
              "tags": [
                "spec",
                "docs"
              ]
            }
          ],
          "groupName": "Number API",
          "id": "80"
        },
        {
          "name": "`Number.parseInt()`",
          "description": "`Number.parseInt()` parses a string and returns an integer.",
          "path": "number-api/parseInt",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 5
            },
            {
              "bundle": "es1/language",
              "id": 3
            }
          ],
          "publishDateUTC": "2019-10-06T17:29:00.000Z",
          "links": [
            {
              "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-number.parseint",
              "comment": "Description of `Number.parseInt()` in the specification.",
              "tags": [
                "spec",
                "docs"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt",
              "comment": "The MDN docs for this function.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "https://www.ecma-international.org/ecma-262/6.0/index.html#sec-parseint-string-radix",
              "comment": "Spec chapter of the global `parseInt()` function.",
              "tags": [
                "spec",
                "docs"
              ]
            },
            {
              "url": "https://twitter.com/wolframkriesing/status/1180533105221873672",
              "comment": "A twitter thread, where I explained the decision process of the creation of this kata and how it relates to the ES1 kata of this function.",
              "tags": [
                "discussion"
              ]
            }
          ],
          "groupName": "Number API",
          "id": "81"
        }
      ],
      "slug": "number-api",
      "name": "Number API"
    },
    "Default parameters": {
      "items": [
        {
          "name": "Basics",
          "description": "Default parameters make function parameters more flexible.",
          "path": "default-parameters/basics",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 5
            },
            {
              "bundle": "es6/language",
              "id": 1
            }
          ],
          "publishDateUTC": "2015-06-30T07:55:00.000Z",
          "groupName": "Default parameters",
          "id": "57"
        }
      ],
      "slug": "default-parameters",
      "name": "Default parameters"
    },
    "Reflect": {
      "items": [
        {
          "name": "Basics",
          "description": "",
          "path": "reflect/basics",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 22
            },
            {
              "bundle": "es6/language",
              "id": 25
            },
            {
              "bundle": "es6/language",
              "id": 28
            }
          ],
          "publishDateUTC": "2015-07-02T08:23:00.000Z",
          "groupName": "Reflect",
          "id": "58"
        },
        {
          "name": "`Reflect.apply()`",
          "description": "Calls a target function with given scope and arguments.",
          "path": "reflect/apply",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 22
            },
            {
              "bundle": "es6/language",
              "id": 5
            },
            {
              "bundle": "es6/language",
              "id": 31
            }
          ],
          "publishDateUTC": "2015-07-03T07:55:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-reflect.apply",
              "comment": "How this function is specified.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-createlistfromarraylike",
              "comment": "How the 3rd parameter gets processed, as an `CreateListFromArrayLike`.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply",
              "comment": "The MDN docs for this function.",
              "tags": [
                "docs",
                "mdn"
              ]
            },
            {
              "url": "https://twitter.com/es6katas/status/616877798917967873",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Reflect",
          "id": "59"
        },
        {
          "name": "`Reflect.getPrototypeOf()`",
          "description": "It returns the prototype of the given object.",
          "path": "reflect/getprototypeof",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 22
            },
            {
              "bundle": "es6/language",
              "id": 5
            }
          ],
          "publishDateUTC": "2015-07-08T08:14:00.000Z",
          "groupName": "Reflect",
          "id": "60"
        },
        {
          "name": "`Reflect.construct()`",
          "description": "The `new` operator as a function.",
          "path": "reflect/construct",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-07-30T07:55:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-reflect.construct",
              "comment": "How this function is specified.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-createlistfromarraylike",
              "comment": "How the arguments list that can be passed as second parameter is specified.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://leanpub.com/exploring-es6/read#sec_allocating-and-initializing-instances",
              "comment": "Axel Rauschmayer explaining in his book \"The data flow between class constructors is different from the canonical way of subclassing in ES5.\"",
              "tags": [
                "docs",
                "book"
              ]
            },
            {
              "url": "https://leanpub.com/exploring-es6/read#leanpub-auto-reflect",
              "comment": "The chapter on Reflect in the book \"Exploring ES6\"",
              "tags": [
                "docs",
                "book"
              ]
            },
            {
              "url": "https://twitter.com/es6katas/status/626662280046886912",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Reflect",
          "id": "68"
        },
        {
          "name": "`Reflect.defineProperty()`",
          "description": "Defines a property on a given object.",
          "path": "reflect/defineproperty",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 22
            },
            {
              "bundle": "es6/language",
              "id": 34
            },
            {
              "bundle": "es6/language",
              "id": 35
            }
          ],
          "publishDateUTC": "2015-07-31T08:12:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-reflect.defineproperty",
              "comment": "The specification for this function.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty",
              "comment": "The MDN docs for this function.",
              "tags": [
                "docs",
                "mdn"
              ]
            },
            {
              "url": "https://twitter.com/es6katas/status/627029158997180416",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "Reflect",
          "id": "69"
        }
      ],
      "slug": "reflect",
      "name": "Reflect"
    },
    "Modules": {
      "items": [
        {
          "name": "`import` statement",
          "description": "Use `import` to import functions that have been exported somewhere else.",
          "path": "modules/import",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "groupName": "Modules",
          "id": "61"
        }
      ],
      "slug": "modules",
      "name": "Modules"
    },
    "String API": {
      "items": [
        {
          "name": "`string.includes()`",
          "description": "Finds string within another string.",
          "path": "string-api/includes",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 5
            },
            {
              "bundle": "es6/language",
              "id": 57
            }
          ],
          "publishDateUTC": "2015-07-14T09:29:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.includes",
              "comment": "The official specification, actually quite good to read for this function.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes",
              "comment": "The Mozilla Developer Network docs, contains good examples.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "String API",
          "id": "63"
        },
        {
          "name": "`string.repeat(count)`",
          "description": "Appends `count` copies of `string` to each other and returns it.",
          "path": "string-api/repeat",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 22
            }
          ],
          "publishDateUTC": "2015-08-07T07:55:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.repeat",
              "comment": "The official specification, actually quite good to read for this function.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber",
              "comment": "The part in the spec, which explains the conversion of a string to a number.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat",
              "comment": "The Mozilla Developer Network docs, contains good examples.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "https://twitter.com/es6katas/status/629561384896847873",
              "comment": "Announcement of this kata on twitter.",
              "tags": [
                "announcement"
              ]
            }
          ],
          "groupName": "String API",
          "id": "71"
        },
        {
          "name": "`string.startsWith()`",
          "description": "Determines whether a string begins with the characters of another string.",
          "path": "string-api/startswith",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 7
            },
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 18
            },
            {
              "bundle": "es6/language",
              "id": 20
            },
            {
              "bundle": "es6/language",
              "id": 5
            }
          ],
          "publishDateUTC": "2015-08-26T09:42:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.startswith",
              "comment": "The official specification, actually quite good to read for this function.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith",
              "comment": "The Mozilla Developer Network docs, contains good examples.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "String API",
          "id": "72"
        },
        {
          "name": "`string.endsWith()`",
          "description": "Determines whether a string begins with the characters of another string.",
          "path": "string-api/endswith",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 5
            },
            {
              "bundle": "es6/language",
              "id": 18
            },
            {
              "bundle": "es6/language",
              "id": 20
            }
          ],
          "publishDateUTC": "2015-10-02T07:55:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.endswith",
              "comment": "The official specification, actually quite good to read for this function.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith",
              "comment": "The Mozilla Developer Network docs, contains some examples.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "String API",
          "id": "74"
        }
      ],
      "slug": "string-api",
      "name": "String API"
    },
    "Promise": {
      "items": [
        {
          "name": "basics",
          "description": "A promise represents an operation that hasn`t completed yet, but is expected in the future.",
          "path": "promise/basics",
          "level": "BEGINNER",
          "requiresKnowledgeFrom": [],
          "publishDateUTC": "2015-10-09T09:30:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects",
              "comment": "A well understandable description of the states a promise can be in.",
              "tags": [
                "spec"
              ]
            }
          ],
          "groupName": "Promise",
          "id": "75"
        },
        {
          "name": "creation",
          "description": "A promise can be created in multiple ways, learn them all here.",
          "path": "promise/creation",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 5
            },
            {
              "bundle": "es6/language",
              "id": 75
            },
            {
              "bundle": "es6/language",
              "id": 25
            }
          ],
          "publishDateUTC": "2015-10-28T14:30:00.000Z",
          "links": [
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise-constructor",
              "comment": "Describing the promise constructor.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise.all",
              "comment": "How `Promise.all()` is specified.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all",
              "comment": "Documenting `Promise.all()`.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise.race",
              "comment": "How `Promise.race()` is specified.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race",
              "comment": "Documenting `Promise.race()`.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise.resolve",
              "comment": "How `Promise.resolve()` is specified.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve",
              "comment": "Documenting `Promise.resolve()`.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise.reject",
              "comment": "How `Promise.resolve()` is specified.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject",
              "comment": "Documenting `Promise.reject()`.",
              "tags": [
                "mdn",
                "docs"
              ]
            }
          ],
          "groupName": "Promise",
          "id": "76"
        },
        {
          "name": "chaining `then()`",
          "description": "Chaining promises can enhance readability of asynchronous code.",
          "path": "promise/chaining-then",
          "level": "ADVANCED",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 8
            },
            {
              "bundle": "es6/language",
              "id": 5
            },
            {
              "bundle": "es6/language",
              "id": 1
            },
            {
              "bundle": "es6/language",
              "id": 75
            },
            {
              "bundle": "es6/language",
              "id": 76
            }
          ],
          "publishDateUTC": "2015-11-10T13:30:00.000Z",
          "links": [
            {
              "url": "https://promisesaplus.com/#point-45",
              "comment": "The description of how a value given to `then()` becomes a resolved promise.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promisereactionjob",
              "comment": "Looks like the description in the spec of what `then()` accepts and does with the given value.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "http://www.html5rocks.com/en/tutorials/es6/promises/",
              "comment": "A long article introducing promises.",
              "tags": [
                "article"
              ]
            }
          ],
          "groupName": "Promise",
          "id": "77"
        },
        {
          "name": "the API",
          "description": "`Promise` API overview.",
          "path": "promise/api",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 75
            },
            {
              "bundle": "es6/language",
              "id": 76
            }
          ],
          "publishDateUTC": "2015-03-15T09:30:00.000Z",
          "links": [],
          "groupName": "Promise",
          "id": "78"
        },
        {
          "name": "`promise.catch()`",
          "description": "Returns a Promise and deals with rejected cases only.",
          "path": "promise/catch",
          "level": "INTERMEDIATE",
          "requiresKnowledgeFrom": [
            {
              "bundle": "es6/language",
              "id": 75
            },
            {
              "bundle": "es6/language",
              "id": 76
            }
          ],
          "publishDateUTC": "2015-03-15T09:30:00.000Z",
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch",
              "comment": "A short description of how `catch` works.",
              "tags": [
                "mdn",
                "docs"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype.catch",
              "comment": "The actual chapter about `catch`, you need to dive in from here.",
              "tags": [
                "spec"
              ]
            },
            {
              "url": "http://www.ecma-international.org/ecma-262/6.0/index.html#sec-performpromisethen",
              "comment": "The description of the actual flow of `catch`.",
              "tags": [
                "spec"
              ]
            }
          ],
          "groupName": "Promise",
          "id": "79"
        }
      ],
      "slug": "promise",
      "name": "Promise"
    }
  }
}