{
  "name": "ECMAScript 6 / ES2015",
  "nameSlug": "es6-katas",
  "items": [
    {
      "name": "basics",
      "description": "A template string, is wrapped in backticks.",
      "path": "template-strings/basics",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings",
          "comment": "Description of template strings.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components",
          "comment": "The specification describing the template string syntax.",
          "tags": [
            "spec"
          ]
        }
      ],
      "groupName": "Template strings",
      "groupNameSlug": "template-strings",
      "publishDateRfc822": "Fri, 13 Mar 2015 07:55:00 GMT",
      "id": 1
    },
    {
      "name": "multiline",
      "description": "Template strings, can be multiline.",
      "path": "template-strings/multiline",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 1
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings#Multi-line_strings",
          "comment": "Description of multiline template strings.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "Template strings",
      "groupNameSlug": "template-strings",
      "publishDateRfc822": "Mon, 16 Mar 2015 07:55:00 GMT",
      "id": 2
    },
    {
      "name": "tagged template strings",
      "description": "Advanced form of template strings.",
      "path": "template-strings/tagged",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 1
        },
        {
          "bundle": "es6/language",
          "id": 18
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates",
          "comment": "Description of tagged template strings.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "Template strings",
      "groupNameSlug": "template-strings",
      "publishDateRfc822": "Tue, 17 Mar 2015 07:55:00 GMT",
      "id": 3
    },
    {
      "name": "`raw` property",
      "description": "The `raw` property can access the string without processing escape sequences.",
      "path": "template-strings/raw",
      "level": "EXPERT",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 1
        },
        {
          "bundle": "es6/language",
          "id": 3
        },
        {
          "bundle": "es6/language",
          "id": 82
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings#Raw_strings",
          "comment": "Description of `raw` property of tagged template strings.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-static-semantics-templatestrings",
          "comment": "Describing the raw behavior.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://tc39.es/ecma262/#sec-gettemplateobject",
          "comment": "The JS engine internal abstract operation `GetTemplateObject` describes how the template object, that is passed to the tag-function is created, see esp. the adding of the `raw` property onto the array here (item: 14. Perform ! DefinePropertyOrThrow(template, \"raw\"...).",
          "tags": [
            "spec"
          ]
        }
      ],
      "groupName": "Template strings",
      "groupNameSlug": "template-strings",
      "publishDateRfc822": "Wed, 18 Mar 2015 07:55:00 GMT",
      "id": 4
    },
    {
      "name": "basics",
      "description": "Arrow functions are a more convinient and shorter way to write a function.",
      "path": "arrow-functions/basics",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "groupName": "Arrow functions",
      "groupNameSlug": "arrow-functions",
      "publishDateRfc822": "Thu, 19 Mar 2015 07:55:00 GMT",
      "id": 5
    },
    {
      "name": "function binding",
      "description": "Arrow functions have lexical `this`, no dynamic `this`.",
      "path": "arrow-functions/binding",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es6/language",
          "id": 22
        }
      ],
      "groupName": "Arrow functions",
      "groupNameSlug": "arrow-functions",
      "publishDateRfc822": "Fri, 20 Mar 2015 07:55:00 GMT",
      "id": 6
    },
    {
      "name": "`let` declaration",
      "description": "`let` restricts the scope of the variable to the current block.",
      "path": "block-scoping/let",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "groupName": "Block scope",
      "groupNameSlug": "block-scope",
      "publishDateRfc822": "Mon, 23 Mar 2015 07:55:00 GMT",
      "id": 7
    },
    {
      "name": "`const` declaration",
      "description": "`const` is like `let` plus read-only.",
      "path": "block-scoping/const",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        }
      ],
      "groupName": "Block scope",
      "groupNameSlug": "block-scope",
      "publishDateRfc822": "Tue, 24 Mar 2015 07:55:00 GMT",
      "id": 8
    },
    {
      "name": "basics",
      "description": "ES6 has new shorthands for objects.",
      "path": "object-literal/basics",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 5
        }
      ],
      "groupName": "Object literal",
      "groupNameSlug": "object-literal",
      "publishDateRfc822": "Wed, 25 Mar 2015 07:55:00 GMT",
      "id": 9
    },
    {
      "name": "array",
      "description": "Destructuring arrays allows for more concise.",
      "path": "destructuring/array",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 1
        }
      ],
      "groupName": "Destructuring",
      "groupNameSlug": "destructuring",
      "publishDateRfc822": "Thu, 26 Mar 2015 07:55:00 GMT",
      "id": 10
    },
    {
      "name": "string",
      "description": "Destructuring can also be done on strings.",
      "path": "destructuring/string",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 17
        }
      ],
      "groupName": "Destructuring",
      "groupNameSlug": "destructuring",
      "publishDateRfc822": "Fri, 27 Mar 2015 07:55:00 GMT",
      "id": 11
    },
    {
      "name": "object",
      "description": "Destructuring objects is a core concepts for modules and more.",
      "path": "destructuring/object",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 9
        }
      ],
      "groupName": "Destructuring",
      "groupNameSlug": "destructuring",
      "publishDateRfc822": "Mon, 30 Mar 2015 07:55:00 GMT",
      "id": 12
    },
    {
      "name": "defaults",
      "description": "When destructuring you can also use default values.",
      "path": "destructuring/defaults",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 10
        },
        {
          "bundle": "es6/language",
          "id": 12
        }
      ],
      "groupName": "Destructuring",
      "groupNameSlug": "destructuring",
      "publishDateRfc822": "Tue, 31 Mar 2015 07:55:00 GMT",
      "id": 13
    },
    {
      "name": "parameters",
      "description": "Destructuring function parameters.",
      "path": "destructuring/parameters",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 10
        },
        {
          "bundle": "es6/language",
          "id": 12
        },
        {
          "bundle": "es6/language",
          "id": 5
        }
      ],
      "groupName": "Destructuring",
      "groupNameSlug": "destructuring",
      "publishDateRfc822": "Wed, 01 Apr 2015 07:55:00 GMT",
      "id": 14
    },
    {
      "name": "assign",
      "description": "Assign variables while destructuring.",
      "path": "destructuring/rename",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 10
        },
        {
          "bundle": "es6/language",
          "id": 12
        },
        {
          "bundle": "es6/language",
          "id": 13
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 5
        }
      ],
      "groupName": "Destructuring",
      "groupNameSlug": "destructuring",
      "publishDateRfc822": "Thu, 02 Apr 2015 07:55:00 GMT",
      "id": 15
    },
    {
      "name": "computed properties",
      "description": "Object literal properties may be computed values.",
      "path": "object-literal/computed-properties",
      "level": "ADVANCED",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es6/language",
          "id": 9
        }
      ],
      "groupName": "Object literal",
      "groupNameSlug": "object-literal",
      "publishDateRfc822": "Fri, 03 Apr 2015 07:55:00 GMT",
      "id": 16
    },
    {
      "name": "in strings",
      "description": "How to use unicode in strings.",
      "path": "unicode/in-strings",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 1
        }
      ],
      "groupName": "Unicode",
      "groupNameSlug": "unicode",
      "publishDateRfc822": "Mon, 06 Apr 2015 07:55:00 GMT",
      "id": 17
    },
    {
      "name": "as parameter",
      "description": "Use the rest operator as parameter.",
      "path": "rest/as-parameter",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [],
      "groupName": "Rest operator",
      "groupNameSlug": "rest-operator",
      "publishDateRfc822": "Tue, 07 Apr 2015 08:15:00 GMT",
      "id": 18
    },
    {
      "name": "with destructuring",
      "description": "Use the rest operator with destructuring.",
      "path": "rest/with-destructuring",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [],
      "groupName": "Rest operator",
      "groupNameSlug": "rest-operator",
      "publishDateRfc822": "Wed, 08 Apr 2015 07:55:00 GMT",
      "id": 19
    },
    {
      "name": "with arrays",
      "description": "Spread syntax in use with arrays.",
      "path": "spread/with-arrays",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 10
        },
        {
          "bundle": "es6/language",
          "id": 19
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",
          "comment": "Syntax docs on MDN.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "Spread operator",
      "groupNameSlug": "spread-operator",
      "publishDateRfc822": "Fri, 10 Apr 2015 08:18:00 GMT",
      "id": 20
    },
    {
      "name": "with strings",
      "description": "Spread syntax in use with strings.",
      "path": "spread/with-strings",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 10
        },
        {
          "bundle": "es6/language",
          "id": 19
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",
          "comment": "Syntax docs on MDN.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "Spread operator",
      "groupNameSlug": "spread-operator",
      "publishDateRfc822": "Mon, 13 Apr 2015 07:55:00 GMT",
      "id": 21
    },
    {
      "name": "creation",
      "description": "Create a class.",
      "path": "class/creation",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "groupName": "Class",
      "groupNameSlug": "class",
      "publishDateRfc822": "Tue, 14 Apr 2015 07:55:00 GMT",
      "id": 22
    },
    {
      "name": "accessors",
      "description": "Getter+setters as class properties.",
      "path": "class/accessors",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [],
      "groupName": "Class",
      "groupNameSlug": "class",
      "publishDateRfc822": "Wed, 15 Apr 2015 07:56:00 GMT",
      "id": 23
    },
    {
      "name": "static",
      "description": "Use of the static keyword inside a class.",
      "path": "class/static",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "groupName": "Class",
      "groupNameSlug": "class",
      "publishDateRfc822": "Thu, 16 Apr 2015 07:55:00 GMT",
      "id": 24
    },
    {
      "name": "extends",
      "description": "How to do inheritance, using `extends`.",
      "path": "class/extends",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "groupName": "Class",
      "groupNameSlug": "class",
      "publishDateRfc822": "Fri, 17 Apr 2015 08:25:00 GMT",
      "id": 25
    },
    {
      "name": "more extends",
      "description": "More in depth `extends` stuff",
      "path": "class/more-extends",
      "level": "ADVANCED",
      "requiresKnowledgeFrom": [],
      "groupName": "Class",
      "groupNameSlug": "class",
      "publishDateRfc822": "Mon, 20 Apr 2015 07:55:00 GMT",
      "id": 26
    },
    {
      "name": "super in method",
      "description": "Use of `super` inside a method.",
      "path": "class/super-in-method",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [],
      "groupName": "Class",
      "groupNameSlug": "class",
      "publishDateRfc822": "Tue, 21 Apr 2015 07:55:00 GMT",
      "id": 27
    },
    {
      "name": "super in constructor",
      "description": "Use of `super` inside the constructor.",
      "path": "class/super-in-constructor",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [],
      "groupName": "Class",
      "groupNameSlug": "class",
      "publishDateRfc822": "Wed, 22 Apr 2015 07:55:00 GMT",
      "id": 28
    },
    {
      "name": "`Array.from()`",
      "description": "Convert a not-array into an array.",
      "path": "array-api/from",
      "level": "TBD",
      "requiresKnowledgeFrom": [],
      "groupName": "Array API",
      "groupNameSlug": "array-api",
      "publishDateRfc822": "Thu, 23 Apr 2015 08:32:00 GMT",
      "id": 29
    },
    {
      "name": "`Array.of()`",
      "description": "`Array.of()` creates an array with the given arguments as elements.",
      "path": "array-api/of",
      "level": "TBD",
      "requiresKnowledgeFrom": [],
      "groupName": "Array API",
      "groupNameSlug": "array-api",
      "publishDateRfc822": "Mon, 27 Apr 2015 08:09:00 GMT",
      "id": 30
    },
    {
      "name": "`array.fill()`",
      "description": "`Array.prototype.fill()` can fill up an array with one value.",
      "path": "array-api/fill",
      "level": "TBD",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        }
      ],
      "links": [
        {
          "url": "https://github.com/tddbin/es6katas.org/issues/9",
          "comment": "A discussion in a github issue, about how to use this kata.",
          "tags": [
            "discussion"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill",
          "comment": "API doc on MDN.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "Array API",
      "groupNameSlug": "array-api",
      "publishDateRfc822": "Tue, 28 Apr 2015 07:55:00 GMT",
      "id": 31
    },
    {
      "name": "`array.find()`",
      "description": "`Array.prototype.find()` finds one item in an array.",
      "path": "array-api/find",
      "level": "TBD",
      "requiresKnowledgeFrom": [],
      "groupName": "Array API",
      "groupNameSlug": "array-api",
      "publishDateRfc822": "Wed, 29 Apr 2015 07:55:00 GMT",
      "id": 32
    },
    {
      "name": "`array.findIndex()`",
      "description": "`Array.prototype.findIndex()` find the index of an item in an array.",
      "path": "array-api/findIndex",
      "level": "TBD",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        }
      ],
      "groupName": "Array API",
      "groupNameSlug": "array-api",
      "publishDateRfc822": "Mon, 04 May 2015 08:01:00 GMT",
      "id": 33
    },
    {
      "name": "basics",
      "description": "Symbol basics.",
      "path": "symbol/basics",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [],
      "groupName": "Symbol",
      "groupNameSlug": "symbol",
      "publishDateRfc822": "Tue, 05 May 2015 11:21:00 GMT",
      "id": 34
    },
    {
      "name": "`Symbol.for()`",
      "description": "`Symbol.for()` for registering Symbols globally.",
      "path": "symbol/for",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [],
      "groupName": "Symbol",
      "groupNameSlug": "symbol",
      "publishDateRfc822": "Wed, 06 May 2015 07:55:00 GMT",
      "id": 35
    },
    {
      "name": "`Symbol.keyFor()`",
      "description": "`Symbol.keyFor()` gets the symbol key for a given symbol.",
      "path": "symbol/keyFor",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 35
        }
      ],
      "groupName": "Symbol",
      "groupNameSlug": "symbol",
      "publishDateRfc822": "Thu, 07 May 2015 08:09:00 GMT",
      "id": 36
    },
    {
      "name": "array",
      "description": "",
      "path": "iterator/array",
      "level": "TBD",
      "requiresKnowledgeFrom": [],
      "groupName": "Iterator",
      "groupNameSlug": "iterator",
      "publishDateRfc822": "Fri, 08 May 2015 07:55:00 GMT",
      "id": 37
    },
    {
      "name": "string",
      "description": "",
      "path": "iterator/string",
      "level": "TBD",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 34
        },
        {
          "bundle": "es6/language",
          "id": 37
        }
      ],
      "groupName": "Iterator",
      "groupNameSlug": "iterator",
      "publishDateRfc822": "Mon, 11 May 2015 07:55:00 GMT",
      "id": 38
    },
    {
      "name": "protocol",
      "description": "",
      "path": "iterator/protocol",
      "level": "EXPERT",
      "requiresKnowledgeFrom": [],
      "groupName": "Iterator",
      "groupNameSlug": "iterator",
      "publishDateRfc822": "Tue, 12 May 2015 07:55:00 GMT",
      "id": 39
    },
    {
      "name": "usage",
      "description": "",
      "path": "iterator/usages",
      "level": "EXPERT",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 10
        },
        {
          "bundle": "es6/language",
          "id": 12
        },
        {
          "bundle": "es6/language",
          "id": 34
        },
        {
          "bundle": "es6/language",
          "id": 39
        },
        {
          "bundle": "es6/language",
          "id": 20
        }
      ],
      "groupName": "Iterator",
      "groupNameSlug": "iterator",
      "id": 40
    },
    {
      "name": "`array.entries()`",
      "description": "`Array.prototype.entries()` returns an iterator object with all entries.",
      "path": "array-api/entries",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 29
        },
        {
          "bundle": "es6/language",
          "id": 39
        }
      ],
      "groupName": "Array API",
      "groupNameSlug": "array-api",
      "publishDateRfc822": "Mon, 18 May 2015 08:06:00 GMT",
      "id": 41
    },
    {
      "name": "`array.keys()`",
      "description": "`Array.prototype.keys()` returns an iterator for all keys in the array.",
      "path": "array-api/keys",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 10
        },
        {
          "bundle": "es6/language",
          "id": 29
        },
        {
          "bundle": "es6/language",
          "id": 39
        }
      ],
      "groupName": "Array API",
      "groupNameSlug": "array-api",
      "publishDateRfc822": "Tue, 19 May 2015 07:55:00 GMT",
      "id": 42
    },
    {
      "name": "`array.values()`",
      "description": "`Array.prototype.values()` returns an iterator for all values in the array",
      "path": "array-api/values",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 10
        },
        {
          "bundle": "es6/language",
          "id": 39
        }
      ],
      "groupName": "Array API",
      "groupNameSlug": "array-api",
      "publishDateRfc822": "Wed, 20 May 2015 07:55:00 GMT",
      "id": 43
    },
    {
      "name": "Basics",
      "description": "A Map holds key-value pairs, the key can even be a complex value.",
      "path": "map/basics",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
          "comment": "MDN page about Map.",
          "tags": [
            "mdn"
          ]
        },
        {
          "url": "https://262.ecma-international.org/6.0/#sec-map-objects",
          "comment": "The chapter in the specification, with all details about Map.",
          "tags": [
            "spec"
          ]
        }
      ],
      "groupName": "Map",
      "groupNameSlug": "map",
      "publishDateRfc822": "Thu, 21 May 2015 07:55:00 GMT",
      "id": 44
    },
    {
      "name": "`map.get()`",
      "description": "`Map.prototype.get` returns the element from the map for a key.",
      "path": "map/get",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 37
        }
      ],
      "groupName": "Map",
      "groupNameSlug": "map",
      "publishDateRfc822": "Fri, 22 May 2015 07:55:00 GMT",
      "id": 45
    },
    {
      "name": "`map.set()`",
      "description": "`Map.prototype.set` adds a new element with key and value to a Map.",
      "path": "map/set",
      "level": "EXPERT",
      "requiresKnowledgeFrom": [],
      "groupName": "Map",
      "groupNameSlug": "map",
      "publishDateRfc822": "Tue, 26 May 2015 08:03:00 GMT",
      "id": 46
    },
    {
      "name": "basics",
      "description": "",
      "path": "set/basics",
      "level": "TBD",
      "requiresKnowledgeFrom": [],
      "groupName": "Set",
      "groupNameSlug": "set",
      "publishDateRfc822": "Wed, 27 May 2015 10:12:00 GMT",
      "id": 47
    },
    {
      "name": "`set.add()`",
      "description": "Appends a new element to the end of a Set object.",
      "path": "set/add",
      "level": "TBD",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 47
        }
      ],
      "groupName": "Set",
      "groupNameSlug": "set",
      "publishDateRfc822": "Fri, 29 May 2015 06:55:00 GMT",
      "id": 48
    },
    {
      "name": "creation",
      "description": "There are many ways to create a generator",
      "path": "generator/creation",
      "level": "TBD",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 16
        },
        {
          "bundle": "es6/language",
          "id": 22
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*",
          "comment": "Describes the `function*` declaration.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "Generator",
      "groupNameSlug": "generator",
      "publishDateRfc822": "Mon, 01 Jun 2015 08:39:00 GMT",
      "id": 49
    },
    {
      "name": "iterator",
      "description": "Generators return iterable objects",
      "path": "generator/iterator",
      "level": "TBD",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 49
        }
      ],
      "groupName": "Generator",
      "groupNameSlug": "generator",
      "publishDateRfc822": "Wed, 03 Jun 2015 07:55:00 GMT",
      "id": 50
    },
    {
      "name": "yield expressions",
      "description": "The yield keyword is used to pause and resume a generator function",
      "path": "generator/yield",
      "level": "TBD",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 49
        },
        {
          "bundle": "es6/language",
          "id": 50
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield",
          "comment": "Describing the `yield` keyword.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "Generator",
      "groupNameSlug": "generator",
      "publishDateRfc822": "Fri, 05 Jun 2015 08:25:00 GMT",
      "id": 51
    },
    {
      "name": "send value to a generator",
      "description": "By calling next() with a parameter, you can pass a value to a generator.",
      "path": "generator/send-value",
      "level": "ADVANCED",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 49
        },
        {
          "bundle": "es6/language",
          "id": 50
        },
        {
          "bundle": "es6/language",
          "id": 51
        }
      ],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-generatorresume",
          "comment": "The part in the spec, that describes how a generator resumes.",
          "tags": [
            "spec"
          ]
        }
      ],
      "groupName": "Generator",
      "groupNameSlug": "generator",
      "publishDateRfc822": "Thu, 18 Jun 2015 12:07:00 GMT",
      "id": 52
    },
    {
      "name": "initialize",
      "description": "Initializing a map with values.",
      "path": "map/initialize",
      "level": "ADVANCED",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 29
        },
        {
          "bundle": "es6/language",
          "id": 44
        },
        {
          "bundle": "es6/language",
          "id": 46
        }
      ],
      "groupName": "Map",
      "groupNameSlug": "map",
      "publishDateRfc822": "Mon, 22 Jun 2015 11:56:00 GMT",
      "id": 53
    },
    {
      "name": "`Object.is()`",
      "description": "`Object.is()` compares if two values are the same.",
      "path": "object-api/is",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 44
        }
      ],
      "groupName": "Object API",
      "groupNameSlug": "object-api",
      "publishDateRfc822": "Wed, 24 Jun 2015 07:55:00 GMT",
      "id": 54
    },
    {
      "name": "`Number.isInteger()`",
      "description": "`Number.isInteger()` determines if a value is an integer.",
      "path": "number-api/isinteger",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "groupName": "Number API",
      "groupNameSlug": "number-api",
      "publishDateRfc822": "Thu, 25 Jun 2015 07:55:00 GMT",
      "id": 55
    },
    {
      "name": "send function to a generator",
      "description": "By calling next() with a function, you can pass it to the generator.",
      "path": "generator/send-function",
      "level": "EXPERT",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 49
        },
        {
          "bundle": "es6/language",
          "id": 50
        },
        {
          "bundle": "es6/language",
          "id": 51
        },
        {
          "bundle": "es6/language",
          "id": 52
        }
      ],
      "groupName": "Generator",
      "groupNameSlug": "generator",
      "publishDateRfc822": "Mon, 29 Jun 2015 11:49:00 GMT",
      "id": 56
    },
    {
      "name": "Basics",
      "description": "Default parameters make function parameters more flexible.",
      "path": "default-parameters/basics",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es6/language",
          "id": 1
        }
      ],
      "groupName": "Default parameters",
      "groupNameSlug": "default-parameters",
      "publishDateRfc822": "Tue, 30 Jun 2015 07:55:00 GMT",
      "id": 57
    },
    {
      "name": "Basics",
      "description": "",
      "path": "reflect/basics",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 22
        },
        {
          "bundle": "es6/language",
          "id": 25
        },
        {
          "bundle": "es6/language",
          "id": 28
        }
      ],
      "groupName": "Reflect",
      "groupNameSlug": "reflect",
      "publishDateRfc822": "Thu, 02 Jul 2015 08:23:00 GMT",
      "id": 58
    },
    {
      "name": "`Reflect.apply()`",
      "description": "Calls a target function with given scope and arguments.",
      "path": "reflect/apply",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 22
        },
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es6/language",
          "id": 31
        }
      ],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-reflect.apply",
          "comment": "How this function is specified.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-createlistfromarraylike",
          "comment": "How the 3rd parameter gets processed, as an `CreateListFromArrayLike`.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply",
          "comment": "The MDN docs for this function.",
          "tags": [
            "docs",
            "mdn"
          ]
        },
        {
          "url": "https://twitter.com/es6katas/status/616877798917967873",
          "comment": "Announcement of this kata on twitter.",
          "tags": [
            "announcement"
          ]
        }
      ],
      "groupName": "Reflect",
      "groupNameSlug": "reflect",
      "publishDateRfc822": "Fri, 03 Jul 2015 07:55:00 GMT",
      "id": 59
    },
    {
      "name": "`Reflect.getPrototypeOf()`",
      "description": "It returns the prototype of the given object.",
      "path": "reflect/getprototypeof",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 22
        },
        {
          "bundle": "es6/language",
          "id": 5
        }
      ],
      "groupName": "Reflect",
      "groupNameSlug": "reflect",
      "publishDateRfc822": "Wed, 08 Jul 2015 08:14:00 GMT",
      "id": 60
    },
    {
      "name": "`import` statement",
      "description": "Use `import` to import functions that have been exported somewhere else.",
      "path": "modules/import",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "groupName": "Modules",
      "groupNameSlug": "modules",
      "id": 61
    },
    {
      "name": "`map.has()`",
      "description": "Indicates whether an element with a key exists.",
      "path": "map/has",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 44
        },
        {
          "bundle": "es6/language",
          "id": 46
        }
      ],
      "links": [
        {
          "url": "https://www.youtube.com/watch?v=71aX1z0SzZU",
          "comment": "A video (15min) documenting how this kata was created.",
          "tags": [
            "video"
          ]
        }
      ],
      "groupName": "Map",
      "groupNameSlug": "map",
      "publishDateRfc822": "Fri, 10 Jul 2015 08:09:00 GMT",
      "id": 62
    },
    {
      "name": "`string.includes()`",
      "description": "Finds string within another string.",
      "path": "string-api/includes",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es6/language",
          "id": 57
        }
      ],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.includes",
          "comment": "The official specification, actually quite good to read for this function.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes",
          "comment": "The Mozilla Developer Network docs, contains good examples.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "String API",
      "groupNameSlug": "string-api",
      "publishDateRfc822": "Tue, 14 Jul 2015 09:29:00 GMT",
      "id": 63
    },
    {
      "name": "`set.delete()`",
      "description": "Removes an element from a set.",
      "path": "set/delete",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 47
        },
        {
          "bundle": "es6/language",
          "id": 48
        }
      ],
      "links": [
        {
          "url": "https://twitter.com/es6katas/status/621351626561994752",
          "comment": "Announcement of this kata on twitter.",
          "tags": [
            "announcement"
          ]
        }
      ],
      "groupName": "Set",
      "groupNameSlug": "set",
      "publishDateRfc822": "Wed, 15 Jul 2015 16:12:00 GMT",
      "id": 64
    },
    {
      "name": "the API",
      "description": "`Set` API overview.",
      "path": "set/api",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 29
        },
        {
          "bundle": "es6/language",
          "id": 47
        },
        {
          "bundle": "es6/language",
          "id": 48
        },
        {
          "bundle": "es6/language",
          "id": 64
        },
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es6/language",
          "id": 20
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
          "comment": "",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "https://twitter.com/es6katas/status/621596289160081408",
          "comment": "Announcement of this kata on twitter.",
          "tags": [
            "announcement"
          ]
        }
      ],
      "groupName": "Set",
      "groupNameSlug": "set",
      "publishDateRfc822": "Thu, 16 Jul 2015 08:24:00 GMT",
      "id": 65
    },
    {
      "name": "getter",
      "description": "A getter binds an object property to a function that will be called when that property is looked up.",
      "path": "object-literal/getter",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 9
        },
        {
          "bundle": "es6/language",
          "id": 16
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get",
          "comment": "Description of all the details of a getter.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-object-type",
          "comment": "\"An accessor property associates a key value with one or two accessor functions ...\"",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://twitter.com/es6katas/status/625577823357566976",
          "comment": "Announcement of this kata on twitter.",
          "tags": [
            "announcement"
          ]
        }
      ],
      "groupName": "Object literal",
      "groupNameSlug": "object-literal",
      "publishDateRfc822": "Mon, 27 Jul 2015 08:05:00 GMT",
      "id": 66
    },
    {
      "name": "setter",
      "description": "A setter binds an object property to a function to be called when there is an attempt to set that property.",
      "path": "object-literal/setter",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 9
        },
        {
          "bundle": "es6/language",
          "id": 16
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set",
          "comment": "Description of all the details of a setter.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-object-type",
          "comment": "\"An accessor property associates a key value with one or two accessor functions ...\"",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-method-definitions",
          "comment": "The syntax definition of how to write an (accessor) method.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://twitter.com/es6katas/status/625938211672600576",
          "comment": "Announcement of this kata on twitter.",
          "tags": [
            "announcement"
          ]
        }
      ],
      "groupName": "Object literal",
      "groupNameSlug": "object-literal",
      "publishDateRfc822": "Tue, 28 Jul 2015 07:57:00 GMT",
      "id": 67
    },
    {
      "name": "`Reflect.construct()`",
      "description": "The `new` operator as a function.",
      "path": "reflect/construct",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-reflect.construct",
          "comment": "How this function is specified.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-createlistfromarraylike",
          "comment": "How the arguments list that can be passed as second parameter is specified.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://leanpub.com/exploring-es6/read#sec_allocating-and-initializing-instances",
          "comment": "Axel Rauschmayer explaining in his book \"The data flow between class constructors is different from the canonical way of subclassing in ES5.\"",
          "tags": [
            "docs",
            "book"
          ]
        },
        {
          "url": "https://leanpub.com/exploring-es6/read#leanpub-auto-reflect",
          "comment": "The chapter on Reflect in the book \"Exploring ES6\"",
          "tags": [
            "docs",
            "book"
          ]
        },
        {
          "url": "https://twitter.com/es6katas/status/626662280046886912",
          "comment": "Announcement of this kata on twitter.",
          "tags": [
            "announcement"
          ]
        }
      ],
      "groupName": "Reflect",
      "groupNameSlug": "reflect",
      "publishDateRfc822": "Thu, 30 Jul 2015 07:55:00 GMT",
      "id": 68
    },
    {
      "name": "`Reflect.defineProperty()`",
      "description": "Defines a property on a given object.",
      "path": "reflect/defineproperty",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 22
        },
        {
          "bundle": "es6/language",
          "id": 34
        },
        {
          "bundle": "es6/language",
          "id": 35
        }
      ],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-reflect.defineproperty",
          "comment": "The specification for this function.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty",
          "comment": "The MDN docs for this function.",
          "tags": [
            "docs",
            "mdn"
          ]
        },
        {
          "url": "https://twitter.com/es6katas/status/627029158997180416",
          "comment": "Announcement of this kata on twitter.",
          "tags": [
            "announcement"
          ]
        }
      ],
      "groupName": "Reflect",
      "groupNameSlug": "reflect",
      "publishDateRfc822": "Fri, 31 Jul 2015 08:12:00 GMT",
      "id": 69
    },
    {
      "name": "`set.clear()`",
      "description": "Removes all elements from a Set object.",
      "path": "set/clear",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 47
        },
        {
          "bundle": "es6/language",
          "id": 48
        },
        {
          "bundle": "es6/language",
          "id": 12
        }
      ],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-set.prototype.clear",
          "comment": "How the implementation is specified.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/clear",
          "comment": "The MDN docs.",
          "tags": [
            "docs",
            "mdn"
          ]
        },
        {
          "url": "https://twitter.com/es6katas/status/628119522604662785",
          "comment": "Announcement of this kata on twitter.",
          "tags": [
            "announcement"
          ]
        }
      ],
      "groupName": "Set",
      "groupNameSlug": "set",
      "publishDateRfc822": "Mon, 03 Aug 2015 08:25:00 GMT",
      "id": 70
    },
    {
      "name": "`string.repeat(count)`",
      "description": "Appends `count` copies of `string` to each other and returns it.",
      "path": "string-api/repeat",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 22
        }
      ],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.repeat",
          "comment": "The official specification, actually quite good to read for this function.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber",
          "comment": "The part in the spec, which explains the conversion of a string to a number.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat",
          "comment": "The Mozilla Developer Network docs, contains good examples.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "https://twitter.com/es6katas/status/629561384896847873",
          "comment": "Announcement of this kata on twitter.",
          "tags": [
            "announcement"
          ]
        }
      ],
      "groupName": "String API",
      "groupNameSlug": "string-api",
      "publishDateRfc822": "Fri, 07 Aug 2015 07:55:00 GMT",
      "id": 71
    },
    {
      "name": "`string.startsWith()`",
      "description": "Determines whether a string begins with the characters of another string.",
      "path": "string-api/startswith",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 7
        },
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 18
        },
        {
          "bundle": "es6/language",
          "id": 20
        },
        {
          "bundle": "es6/language",
          "id": 5
        }
      ],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.startswith",
          "comment": "The official specification, actually quite good to read for this function.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith",
          "comment": "The Mozilla Developer Network docs, contains good examples.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "String API",
      "groupNameSlug": "string-api",
      "publishDateRfc822": "Wed, 26 Aug 2015 09:42:00 GMT",
      "id": 72
    },
    {
      "name": "`return` inside a generator function",
      "description": "Return statement in a generator function is special.",
      "path": "generator/return",
      "level": "ADVANCED",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 51
        },
        {
          "bundle": "es6/language",
          "id": 52
        },
        {
          "bundle": "es6/language",
          "id": 50
        },
        {
          "bundle": "es6/language",
          "id": 49
        },
        {
          "bundle": "es6/language",
          "id": 12
        },
        {
          "bundle": "es6/language",
          "id": 29
        },
        {
          "bundle": "es6/language",
          "id": 39
        }
      ],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-iteratorresult-interface",
          "comment": "Description of the IteratorResult interface.",
          "tags": [
            "spec",
            "docs"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield#Description",
          "comment": "Describes how a return statement behaves inside a generator.",
          "tags": [
            "docs",
            "mdn"
          ]
        }
      ],
      "groupName": "Generator",
      "groupNameSlug": "generator",
      "publishDateRfc822": "Fri, 25 Sep 2015 14:45:00 GMT",
      "id": 73
    },
    {
      "name": "`string.endsWith()`",
      "description": "Determines whether a string begins with the characters of another string.",
      "path": "string-api/endswith",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es6/language",
          "id": 18
        },
        {
          "bundle": "es6/language",
          "id": 20
        }
      ],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.endswith",
          "comment": "The official specification, actually quite good to read for this function.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith",
          "comment": "The Mozilla Developer Network docs, contains some examples.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "String API",
      "groupNameSlug": "string-api",
      "publishDateRfc822": "Fri, 02 Oct 2015 07:55:00 GMT",
      "id": 74
    },
    {
      "name": "basics",
      "description": "A promise represents an operation that hasn`t completed yet, but is expected in the future.",
      "path": "promise/basics",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects",
          "comment": "A well understandable description of the states a promise can be in.",
          "tags": [
            "spec"
          ]
        }
      ],
      "groupName": "Promise",
      "groupNameSlug": "promise",
      "publishDateRfc822": "Fri, 09 Oct 2015 09:30:00 GMT",
      "id": 75
    },
    {
      "name": "creation",
      "description": "A promise can be created in multiple ways, learn them all here.",
      "path": "promise/creation",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es6/language",
          "id": 75
        },
        {
          "bundle": "es6/language",
          "id": 25
        }
      ],
      "links": [
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise-constructor",
          "comment": "Describing the promise constructor.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise.all",
          "comment": "How `Promise.all()` is specified.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all",
          "comment": "Documenting `Promise.all()`.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise.race",
          "comment": "How `Promise.race()` is specified.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race",
          "comment": "Documenting `Promise.race()`.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise.resolve",
          "comment": "How `Promise.resolve()` is specified.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve",
          "comment": "Documenting `Promise.resolve()`.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promise.reject",
          "comment": "How `Promise.resolve()` is specified.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject",
          "comment": "Documenting `Promise.reject()`.",
          "tags": [
            "mdn",
            "docs"
          ]
        }
      ],
      "groupName": "Promise",
      "groupNameSlug": "promise",
      "publishDateRfc822": "Wed, 28 Oct 2015 14:30:00 GMT",
      "id": 76
    },
    {
      "name": "chaining `then()`",
      "description": "Chaining promises can enhance readability of asynchronous code.",
      "path": "promise/chaining-then",
      "level": "ADVANCED",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es6/language",
          "id": 1
        },
        {
          "bundle": "es6/language",
          "id": 75
        },
        {
          "bundle": "es6/language",
          "id": 76
        }
      ],
      "links": [
        {
          "url": "https://promisesaplus.com/#point-45",
          "comment": "The description of how a value given to `then()` becomes a resolved promise.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/#sec-promisereactionjob",
          "comment": "Looks like the description in the spec of what `then()` accepts and does with the given value.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "http://www.html5rocks.com/en/tutorials/es6/promises/",
          "comment": "A long article introducing promises.",
          "tags": [
            "article"
          ]
        }
      ],
      "groupName": "Promise",
      "groupNameSlug": "promise",
      "publishDateRfc822": "Tue, 10 Nov 2015 13:30:00 GMT",
      "id": 77
    },
    {
      "name": "the API",
      "description": "`Promise` API overview.",
      "path": "promise/api",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 75
        },
        {
          "bundle": "es6/language",
          "id": 76
        }
      ],
      "links": [],
      "groupName": "Promise",
      "groupNameSlug": "promise",
      "publishDateRfc822": "Sun, 15 Mar 2015 09:30:00 GMT",
      "id": 78
    },
    {
      "name": "`promise.catch()`",
      "description": "Returns a Promise and deals with rejected cases only.",
      "path": "promise/catch",
      "level": "INTERMEDIATE",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 75
        },
        {
          "bundle": "es6/language",
          "id": 76
        }
      ],
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch",
          "comment": "A short description of how `catch` works.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype.catch",
          "comment": "The actual chapter about `catch`, you need to dive in from here.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "http://www.ecma-international.org/ecma-262/6.0/index.html#sec-performpromisethen",
          "comment": "The description of the actual flow of `catch`.",
          "tags": [
            "spec"
          ]
        }
      ],
      "groupName": "Promise",
      "groupNameSlug": "promise",
      "publishDateRfc822": "Sun, 15 Mar 2015 09:30:00 GMT",
      "id": 79
    },
    {
      "name": "`Number.isNaN()`",
      "description": "`Number.isNaN()` determines if a value is `NaN`.",
      "path": "number-api/isnan",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [],
      "links": [
        {
          "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan",
          "comment": "Description of `Number.isNaN` in the specification.",
          "tags": [
            "spec",
            "docs"
          ]
        },
        {
          "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer",
          "comment": "Description of `Number.MAX_SAFE_INTEGER` in the spec.",
          "tags": [
            "spec",
            "docs"
          ]
        },
        {
          "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-number.positive_infinity",
          "comment": "Description of `Number.POSITIVE_INFINITY` in the spec.",
          "tags": [
            "spec",
            "docs"
          ]
        },
        {
          "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number",
          "comment": "The (old) global `isNaN` function, that behaves a bit different.",
          "tags": [
            "spec",
            "docs"
          ]
        },
        {
          "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-math.pi",
          "comment": "The place where `Math.PI` is specified.",
          "tags": [
            "spec",
            "docs"
          ]
        }
      ],
      "groupName": "Number API",
      "groupNameSlug": "number-api",
      "publishDateRfc822": "Sat, 15 Jun 2019 15:42:00 GMT",
      "id": 80
    },
    {
      "name": "`Number.parseInt()`",
      "description": "`Number.parseInt()` parses a string and returns an integer.",
      "path": "number-api/parseInt",
      "level": "BEGINNER",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es1/language",
          "id": 3
        }
      ],
      "links": [
        {
          "url": "https://www.ecma-international.org/ecma-262/6.0/#sec-number.parseint",
          "comment": "Description of `Number.parseInt()` in the specification.",
          "tags": [
            "spec",
            "docs"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt",
          "comment": "The MDN docs for this function.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "https://www.ecma-international.org/ecma-262/6.0/index.html#sec-parseint-string-radix",
          "comment": "Spec chapter of the global `parseInt()` function.",
          "tags": [
            "spec",
            "docs"
          ]
        },
        {
          "url": "https://twitter.com/wolframkriesing/status/1180533105221873672",
          "comment": "A twitter thread, where I explained the decision process of the creation of this kata and how it relates to the ES1 kata of this function.",
          "tags": [
            "discussion"
          ]
        }
      ],
      "groupName": "Number API",
      "groupNameSlug": "number-api",
      "publishDateRfc822": "Sun, 06 Oct 2019 17:29:00 GMT",
      "id": 81
    },
    {
      "name": "`String.raw`",
      "description": "`String.raw` is a tag function for a template literal, which returns the raw string, e.g. \\\\n (not \\n) for a line break.",
      "path": "string-api/raw",
      "level": "ADVANCED",
      "requiresKnowledgeFrom": [
        {
          "bundle": "es6/language",
          "id": 8
        },
        {
          "bundle": "es6/language",
          "id": 5
        },
        {
          "bundle": "es6/language",
          "id": 18
        },
        {
          "bundle": "es6/language",
          "id": 20
        }
      ],
      "links": [
        {
          "url": "https://262.ecma-international.org/6.0/#sec-string.raw",
          "comment": "The original official specification when introduced, it does not explain what this function does, but very much in detail how it works which results in explaining the \"what\" too.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://tc39.es/ecma262/#sec-string.raw",
          "comment": "The more readable and usable specification, in the version of the continuously maintained specification document.",
          "tags": [
            "spec"
          ]
        },
        {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw",
          "comment": "The Mozilla Developer Network docs, an easy to understand explanation.",
          "tags": [
            "mdn",
            "docs"
          ]
        },
        {
          "url": "https://www.youtube.com/watch?v=lFhMQSfIVms",
          "comment": "This video explains `String.raw` nicely by working with it on the browser console.",
          "tags": [
            "video"
          ]
        }
      ],
      "groupName": "String API",
      "groupNameSlug": "string-api",
      "publishDateRfc822": "Sun, 08 Oct 2023 19:15:00 GMT",
      "id": 82
    }
  ]
}